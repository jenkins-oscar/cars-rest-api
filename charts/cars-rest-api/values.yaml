# Default values for node projects.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
image:
  repository: draft
  tag: dev
  pullPolicy: IfNotPresent

# define environment variables here as a map of key: value
env:

# enable this flag to use knative serve to deploy the app
knativeDeploy: false

service:
  name: cars-rest-api
  type: ClusterIP
  externalPort: 80
  internalPort: 1337
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: "kubernetes.io/ingress.class: nginx"
resources:
  limits:
    cpu: 400m
    memory: 256Mi
  requests:
    cpu: 200m
    memory: 128Mi
probePath: /
livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
readinessProbe:
  failureThreshold: 1
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

## MongoDB chart configuration
## ref: https://github.com/helm/charts/blob/master/stable/mongodb/values.yaml
##
cars-rest-api-db:
  ## Whether to deploy a mongodb server to satisfy the applications database requirements.
  ## To use an external database set this to false and configure the externaldb parameters
  enabled: true

  ## Enable authentication
  ## ref: https://docs.mongodb.com/manual/tutorial/enable-authentication/
  #
  usePassword: true
  existingSecret: jx-auth

  ## MongoDB custom user and database
  ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#creating-a-user-and-database-on-first-run
  ##
  mongodbUsername: mongoadmin
 # mongodbDatabase: cars_rest_api
 # mongodbPassword: Password1

  ## MongoDB admin password
  ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#setting-the-root-password-on-first-run
  ##
  # mongodbRootPassword: Password1

## Set to true if you would like to see extra information on logs
  ## It turns on Bitnami debugging in minideb-extras-base
  ## ref:  https://github.com/bitnami/minideb-extras-base
  debug: true
## Provision an external database (Only if mongodb.enabled is false)
## You can:
##    1) Pass an already existing Secret with your database credentials
##    2) Pass an already existing ServiceInstance name and specify the service catalog broker to automatically create a ServiceBinding for your application.
##
externaldb:
  ## Set to true if your external database has ssl enabled
  ##
  ssl: false
  ### You can use an existing secret containing your database credentials
  ### Please refer to the respective section in the README to know the details about this secret.
  ##
  secretName:
  ## Only if using Kubernetes Service Catalog you can specify the kind of broker used. Available options are osba|gce|aws
  ##
  type: osba
  ## If you provide the serviceInstanceName, the chart will create a ServiceBinding for that ServiceInstance
  ##
  broker:
    serviceInstanceName: