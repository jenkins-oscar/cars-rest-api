{{- if .Values.knativeDeploy }}
{{- else }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        draft: {{ default "draft-app" .Values.draft }}
        app: {{ template "fullname" . }}
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
            - name: MONGODB_URI
              value: "mongodb://mongoadmin:Password1@{{ template "mongodb.fullname" . }}-db:27017/cars_rest_api?authSource=admin"
              #value: "mongodb://{{ template "fullname" . }}-db:27017/cars_rest_api"
            - name: MONGODB_HOST
              value: "{{ template "mongodb.fullname" . }}-db"
            - name: MONGODB_PORT
              value: "27017"
            - name: MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: mongodb-username
                  name: {{ .Release.Name }}-auth
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key:  mongodb-password
                  name: {{ .Release.Name }}-auth
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongodb-root-password
                  name: {{ .Release.Name }}-auth                  
            # - name: MONGODB_DATABASE
            #   valueFrom:
            #     secretKeyRef:
            #       key: mongodbDatabase
            #       name: {{ .Release.Name }}-auth   

        ports:
        - containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          httpGet:
            path: {{ .Values.probePath }}
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.probePath }}
            port: {{ .Values.service.internalPort }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
{{- end }}